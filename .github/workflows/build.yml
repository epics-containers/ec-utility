name: Build and publish image to ghcr.io/epics-containers

on:
  push:
  pull_request:

jobs:
  build:
    # pull requests are a duplicate of a branch push if within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest # everyone is on ubuntu-latest

    runs-on: ${{ matrix.os }}
    env:
      TAG: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
    steps:

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          tags: ci_test
          load: true

      - name: Push developer image
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.TAG }}:${{ github.ref_name }}
          push: true


  release:
    # Release on tag push - publish ioc schema
    needs: [build]
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    runs-on: ubuntu-latest

    # this job runs in the native developer container we just made
    container:
      image: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-developer:${{ github.ref_name }}

    steps:
      - name: generate-schema
        run: |
          ibek ioc generate-schema --output ibek.ioc.schema.json

      - name: Github Release
        uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0 # v0.1.15
        with:
          files: |
            ibek.ioc.schema.json
          generate_release_notes: true
